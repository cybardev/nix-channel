{
  lib,
  pkgs,
  fetchFromGitHub ? pkgs.fetchFromGitHub,
  makeRustPlatform ? pkgs.makeRustPlatform,
  rust-bin ? pkgs.rust-bin,
}: let
  rustPlatform = makeRustPlatform {
    cargo = rust-bin.fromRustupToolchainFile ./rust-toolchain.toml;
    rustc = rust-bin.fromRustupToolchainFile ./rust-toolchain.toml;
  };
  pname = "pyrefly";
  version = "0.17.1";
  src = fetchFromGitHub {
    owner = "facebook";
    repo = "pyrefly";
    rev = version;
    hash = "sha256-aMFK4verIdijgunVmj+Ge5XZZir38PLAKWNw4mOieiM=";
  };
in
  rustPlatform.buildRustPackage {
    inherit pname version src;

    postPatch = ''
      cp ${./Cargo.lock} Cargo.lock
      cp ${./Cargo.lock} pyrefly/Cargo.lock
    '';

    cargoRoot = "pyrefly";

    cargoDeps = rustPlatform.importCargoLock {
      # generated by running `cargo generate-lockfile` in the `pyrefly` directory
      lockFile = ./Cargo.lock;
      outputHashes = {
        "ruff_python_ast-0.0.0" = "sha256-YQmkmn6fWKmKz+Lw9wwgPG2O9E+2/ZJcclRs97SOWK4=";
      };
    };

    nativeBuildInputs = [rustPlatform.cargoSetupHook];

    # disable tests
    doCheck = false;

    meta = with lib; {
      description = "A fast type checker and IDE for Python";
      homepage = "https://github.com/facebook/pyrefly";
      license = licenses.mit;
      mainProgram = "pyrefly";
      maintainers = [];
      platforms = lib.platforms.linux ++ lib.platforms.darwin;
    };
  }
